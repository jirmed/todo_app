name: CI Backend Build

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/jirmed/todo-backend:latest
          platforms: linux/arm64
          cache-from: |
            type=gha,scope=backend
            type=registry,ref=ghcr.io/jirmed/todo-backend:latest
          cache-to: type=gha,mode=max,scope=backend

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/jirmed/todo-frontend:latest
          platforms: linux/arm64
          cache-from: |
            type=gha,scope=frontend
            type=registry,ref=ghcr.io/jirmed/todo-frontend:latest
          cache-to: type=gha,mode=max,scope=frontend

      - name: Build and push proxy image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          push: true
          tags: ghcr.io/jirmed/todo-proxy:latest
          platforms: linux/arm64
          cache-from: |
            type=gha,scope=proxy
            type=registry,ref=ghcr.io/jirmed/todo-proxy:latest
          cache-to: type=gha,mode=max,scope=proxy
  deploy:
    needs: build-backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H 130.61.16.89 >> ~/.ssh/known_hosts

      - name: Deploy stack over SSH
        env:
          SSH_USER: ubuntu
          SSH_HOST: 130.61.16.89
        run: |
          scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes docker-compose.yaml $SSH_USER@$SSH_HOST:/home/ubuntu/
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes $SSH_USER@$SSH_HOST "docker stack deploy -c /home/ubuntu/docker-compose.yaml todoapp"